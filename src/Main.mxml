<?xml version="1.0" encoding="utf-8" ?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:mm="random.components.*" xmlns:mx="library://ns.adobe.com/flex/mx" applicationComplete="initApp()">
    <fx:Script><![CDATA[
        import flash.display.DisplayObject;

        import mx.collections.ArrayList;
        import mx.containers.TitleWindow;

        import mx.controls.Alert;
        import mx.events.CloseEvent;
        import mx.managers.PopUpManager;
        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;

        import random.components.RoomSplitWindow;

        import random.events.CustomEventHandler;

        import random.events.CustomMouseDownEvent;
        import random.events.CustomMouseMoveEvent;
        import random.events.CustomMouseUpEvent;

        import random.events.DemoDataUrlChangeEvent;
        import random.events.GenerateStartEvent;
        import random.events.OperationTypeEvent;
        import random.events.SignalEvent;
        import random.utils.RoomMergeUtils;
        import random.utils.Constants;
        import random.utils.GeneratorUtil;
        import random.utils.vo.Building;

        import random.valueObject.BuildingVo;

        import spark.components.Label;

        import spark.events.IndexChangeEvent;

        // 鼠标是否离开SWF
        private var isMouseInSWF:Boolean = true;
        // 鼠标是否按下
        private var isMouseDown:Boolean = false;
        [Bindable]
        private var jsonPath:String;
        //
        [Bindable]
        private var customEventHandler:CustomEventHandler = new CustomEventHandler();

        private function initApp():void {
            if (jsonPath) {
                dataService.send();
            }
//            stage.addEventListener(MouseEvent.MOUSE_OUT, stage_mouseOutHandler);
            buildingGroup.addEventListener(Constants.CUSTOM_MOUSE_DOWM_EVENT_TYPE, buildingGroup_customMouseDownEventTypeHandler);
            buildingGroup.addEventListener(Constants.CUSTOM_MOUSE_MOVE_EVENT_TYPE, buildingGroup_customMouseMoveEventTypeHandler);
            buildingGroup.addEventListener(Constants.CUSTOM_MOUSE_UP_EVENT_TYPE, buildingGroup_customMouseUpEventTypeHandler);
        }

        private function onLoaderComplete(e:ResultEvent):void {
            var jsonData:Object = JSON.parse(e.result.toString());
//            Alert.show(JSON.stringify(imgCache));
            this.customEventHandler.clean();
            customEventHandler.buidingData = new BuildingVo(jsonData, imgCache);
        }

        private function onLoaderFault(e:FaultEvent):void {
            Alert.show(JSON.stringify(e.fault.rootCause), "Info")
        }

        private function loadDataConponents1_demoDataChangeHandler(event:DemoDataUrlChangeEvent):void {
            jsonPath = Constants.SERVER_URL + "resources/" + event.dataName + ".json?r=" + Math.random();
            dataService.send();
        }

        private function generatorComponent1_generateStartEventHandler(event:GenerateStartEvent):void {
            var building:Building = GeneratorUtil.generateBuilding(event);
            Alert.show(JSON.stringify(building));
        }

        /**
         *  鼠标按下开始记录选中房间
         * @param event
         */
        private function buildingGroup_customMouseDownEventTypeHandler(event:CustomMouseDownEvent):void {
            this.isMouseDown = true;
//            this.customEventHandler.clean();
            this.customEventHandler.append(event);
        }

        /**
         *  鼠标移动的处理
         * @param event
         */
        private function buildingGroup_customMouseMoveEventTypeHandler(event:CustomMouseMoveEvent):void {
            if (this.isMouseDown) {
                this.customEventHandler.removeBebind(event);
            }
        }

        /**
         *  鼠标释放的处理
         * @param event
         */
        private function buildingGroup_customMouseUpEventTypeHandler(event:CustomMouseUpEvent):void {
            this.isMouseDown = false;
            this.customEventHandler.mouseUpEvent = event;
//            this.customEventHandler.removeBebind(event);
//            this.customEventHandler.createNewRoom();
        }

        /**
         *  鼠标离开 SWF
         * @param event
         */
        private function stage_mouseOutHandler(event:MouseEvent):void {
            this.isMouseInSWF = false;
            Alert.show("out swf");
        }

        /**
         *  切换操作类型
         *   merge:合并选中
         *   split 切分
         *   empty 重置
         * @param event
         */
        private function mergeAndSplitComponent1_operationTypeChangedHandler(event:OperationTypeEvent):void {
            var that:* = this;
            this.customEventHandler.operationChangedHandler(event, function (type:String, data:Object):void {
                if (Constants.SPLIT == type) {
                    var splitWindow:RoomSplitWindow = new RoomSplitWindow();
                    splitWindow = RoomSplitWindow(PopUpManager.createPopUp(that, RoomSplitWindow, true));
                    splitWindow.roomReductionCoordinates = data as ArrayList;
                    splitWindow.addEventListener(CloseEvent.CLOSE, function splitWindow_closeHandler(event:CloseEvent):void {
                        PopUpManager.removePopUp(splitWindow);
                    });
                    PopUpManager.centerPopUp(splitWindow);
                }
            });

        }
        ]]></fx:Script>

    <fx:Declarations>
        <s:HTTPService id="dataService" url="{jsonPath}" showBusyCursor="true" method="GET" result="onLoaderComplete(event)" fault="onLoaderFault(event)"/>
        <!--<s:ArrayList id="roomList" source="{buidingData.rooms.toArray()}"/>-->
        <s:ContentCache id="imgCache" enableQueueing="true" maxActiveRequests="1" maxCacheEntries="10"/>
    </fx:Declarations>
    <s:Scroller width="100%" height="100%">
        <s:HGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" paddingBottom="3" paddingLeft="3" paddingRight="3">
            <s:Panel title="建筑物信息" width="15%" top="3">
                <mx:Accordion width="100%" height="100%">
                    <s:NavigatorContent label="生成JSON数据">
                        <mm:GeneratorComponent width="100%" height="100%" padding="5" generateStartEvent="generatorComponent1_generateStartEventHandler(event)"/>
                    </s:NavigatorContent>
                    <s:NavigatorContent label="加载JSON数据并渲染">
                        <mm:LoadDataConponents width="100%" height="100%"  padding="5" buidingData="{customEventHandler.buidingData}"
                                               demoDataChange="loadDataConponents1_demoDataChangeHandler(event)"/>
                    </s:NavigatorContent>
                    <s:NavigatorContent label="合并与拆分">
                        <mm:MergeAndSplitComponent width="100%" height="100%" padding="5" operationTypeChanged="mergeAndSplitComponent1_operationTypeChangedHandler(event)"/>
                    </s:NavigatorContent>
                </mx:Accordion>
            </s:Panel>
            <s:Panel id="buildingPanel" minHeight="600" minWidth="955" height="{(customEventHandler.buidingData.bFloorsNum + customEventHandler.buidingData.uFloorsNum) * Constants.UNIT_LENGTH + 100}"
                     width="85%" title="建筑物编码: {customEventHandler.buidingData.id} -- 名称: {customEventHandler.buidingData.name}">
                <s:Scroller left="10" top="10" right="10" bottom="10">
                    <!--<s:DataGroup dataProvider="{buidingData.rooms}" id="buildingGroup" itemRenderer="random.renderers.RoomItemRender" width="100%" height="100%"/>-->
                    <s:VGroup>
                        <!--  单元  -->
                        <s:DataGroup dataProvider="{customEventHandler.buidingData.units}" id="unitsDataGroup" itemRenderer="random.renderers.UnitRenderer"/>
                        <s:HGroup>
                            <!-- 楼层 -->
                            <s:DataGroup dataProvider="{customEventHandler.buidingData.floors}" id="floorsDataGroup" itemRenderer="random.renderers.FloorRenderer"/>
                            <s:DataGroup dataProvider="{customEventHandler.buidingData.rooms}" id="buildingGroup" itemRenderer="random.renderers.CustomRoom" width="100%" height="100%"/>
                        </s:HGroup>
                    </s:VGroup>
                </s:Scroller>
            </s:Panel>
        </s:HGroup>
    </s:Scroller>
</s:Application>
