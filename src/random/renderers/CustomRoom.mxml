<?xml version="1.0"?>
<!--
  Created by Yo on 2015/11/3.
-->
<renderers:RoomDetailRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:renderers="random.renderers.*"
                              xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx"
                              autoDrawBackground="false" render="draw(event)"
                              creationComplete="creationCompleteHandler(event)">

  <fx:Script><![CDATA[
    import mx.collections.ArrayList;
    import mx.controls.Alert;
    import mx.events.FlexEvent;

    import random.events.CustomMouseDownEvent;
    import random.events.CustomMouseMoveEvent;
    import random.events.CustomMouseUpEvent;

    import random.utils.Constants;

    import random.valueObject.CoordinateVo;
    import random.valueObject.RoomVo;

    import spark.components.Group;

    /**
     *  房间点击函数
     * @param e
     */
    private function clickHandler(e:Event):void {
      var g:Group = e.target as Group;
      Alert.show(data.id + "-" + data.x + "-" + data.y);
    }

    /**
     *  绘图函数
     * @param event
     */
    private function draw(event:Event):void {
      var coordinates:ArrayList = data.coordinates as ArrayList;
      var s:Group = this.getChildByName("vd") as Group;
      s.graphics.clear();
      s.graphics.lineStyle(1, 0x000000);
      s.graphics.beginFill(0x808080, 3);
      for (var i:uint = 0; i < coordinates.length; i++) {
        var c:CoordinateVo = coordinates.getItemAt(i) as CoordinateVo;
        if (i == 0) {
          s.graphics.moveTo(c.x, c.y)
        } else {
          s.graphics.lineTo(c.x, c.y);
        }
      }
      s.graphics.endFill();
    }

    /**
     *  创建完成函数
     * @param event
     */
    private function creationCompleteHandler(event:FlexEvent):void {
      var gr:Group = this.getChildByName("vd") as Group;
      gr.id = data.id;
    }

    /**
     *  鼠标左键按下处理
     * @param event
     */
    private function group1_mouseDownHandler(event:MouseEvent):void {
      var customeMouseDownEvent:CustomMouseDownEvent = new CustomMouseDownEvent(Constants.CUSTOM_MOUSE_DOWM_EVENT_TYPE, true, true,
              (event.currentTarget as Group), data as RoomVo);
      dispatchEvent(customeMouseDownEvent);
    }

    /**
     *  鼠标移动处理
     * @param event
     */
    private function group1_mouseMoveHandler(event:MouseEvent):void {
      var g:Group = event.currentTarget as Group;
      var customMouseMoveEvent:CustomMouseMoveEvent = new CustomMouseMoveEvent(Constants.CUSTOM_MOUSE_MOVE_EVENT_TYPE,
              true, true,g, (data as RoomVo));
      dispatchEvent(customMouseMoveEvent);
    }

    /**
     * 鼠标抬起处理函数
     * @param event
     */
    private function group1_mouseUpHandler(event:MouseEvent):void {
      var g:Group = event.currentTarget as Group;
      var customMouseUpEvent:CustomMouseUpEvent = new CustomMouseUpEvent(Constants.CUSTOM_MOUSE_UP_EVENT_TYPE,
              true, true,g, data as RoomVo);
      dispatchEvent(customMouseUpEvent);
    }
    ]]></fx:Script>

  <s:Group name="vd" width="100%" height="100%"  alpha="0.7" color="#ffffff"
           mouseMove="group1_mouseMoveHandler(event)"
           mouseDown="group1_mouseDownHandler(event)"
           mouseUp="group1_mouseUpHandler(event)">
    <s:layout>
      <s:ConstraintLayout/>
    </s:layout>
    <s:VGroup x="{data.x + 5}" y="{data.y + Constants.UNIT_LENGTH/2}">
        <mx:LinkButton label="{data.name}-{data.x}-{data.y}" color="0xFFFFFF" click="{Alert.show('Pressed');}"
                       textDecoration="underline" fontWeight="normal"/>
      <s:DataGroup id="tagsGroup" dataProvider="{data.tagImgs}" itemRenderer="random.renderers.TagItemRenderer">
        <s:layout>
          <s:TileLayout/>
        </s:layout>
      </s:DataGroup>
    </s:VGroup>
  </s:Group>

</renderers:RoomDetailRenderer>
